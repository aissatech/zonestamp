{"version":3,"sources":["components/Header.js","components/Footer.js","components/App.js","components/CreateStamp.js","components/StampDisplay.js","components/NotFound.js","components/Router.js","serviceWorker.js","index.js","images/github.svg"],"names":["Header","react_default","a","createElement","className","href","Component","Footer","state","alt","src","github","App","components_Header","this","props","main","components_Footer","CreateStamp","zone","Intl","DateTimeFormat","resolvedOptions","timeZone","startDate","moment","_this2","components_App","react","es","selected","onChange","date","setState","tz","dateFormat","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","react_timezone_min_default","value","timezone","newStartDate","inputProps","placeholder","name","Link","to","unix","StampDisplay","window","location","pathname","substr","dist_default","format","NotFound","Router","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4a90b267.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <div className=\"title\">\n          <a href=\"/\">zoneStamp!</a>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport github from '../images/github.svg';\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <footer>\n        <div className=\"cta\">\n          <div className=\"attribution\">\n            Made by <a href=\"https://raquelmsmith.com\">Raquel M Smith</a>{' '}\n            <a className=\"github\" href=\"https://github.com/raquelmsmith\">\n              <img alt=\"github logo\" src={github} />\n            </a>\n          </div>\n          <a href=\"/\">Make your own zoneStamp!</a>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../css/App.scss';\nimport '../css/timezone-picker.scss';\nimport '../css/footer.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"inner\">\n          <Header />\n          <main>{this.props.main}</main>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component, Fragment } from 'react';\nimport App from './App';\nimport TimezonePicker from 'react-timezone';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { Link } from 'react-router-dom'\nimport 'moment-timezone';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../css/CreateStamp.scss';\n\nclass CreateStamp extends Component {\n  state = {\n    zone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    startDate: moment()\n  };\n  render() {\n    return (\n      <App\n        main={\n          <Fragment>\n            <p>The event will take place on</p>\n            <div className=\"time-wrapper\">\n              <div className=\"select-day\">\n                <DatePicker\n                  selected={this.state.startDate}\n                  onChange={date => {\n                    this.setState({ startDate: date.tz(this.state.zone) });\n                  }}\n                  dateFormat=\"MMMM DD, YYYY\"\n                />\n              </div>\n              <p>at</p>\n              <div className=\"select-hour\">\n                <DatePicker\n                  selected={this.state.startDate}\n                  onChange={date => {\n                    this.setState({ startDate: date.tz(this.state.zone) });\n                  }}\n                  showTimeSelect\n                  showTimeSelectOnly\n                  timeIntervals={15}\n                  dateFormat=\"LT\"\n                  timeCaption=\"Time\"\n                  className=\"inline\"\n                />\n              </div>\n            </div>\n            <TimezonePicker\n              className=\"timezone-picker no-border\"\n              value={this.state.zone}\n              onChange={timezone => {\n                let newStartDate = this.state.startDate.tz(this.state.zone);\n                this.setState({ startDate: newStartDate, zone: timezone });\n              }}\n              inputProps={{\n                placeholder: 'Select Timezone...',\n                name: 'timezone'\n              }}\n            />\n            <button>Generate Stamp!</button>\n            <div className=\"stamp-link-wrapper\">\n              <div className=\"arrow-up\" />\n              <div className=\"stamp-link\">\n                <Link to={\"/\" + this.state.startDate.unix()}>\n                  https://zonestamp.com/\n                  {this.state.startDate.unix()}\n                </Link>\n              </div>\n            </div>\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default CreateStamp;\n","import React, { Component, Fragment } from 'react';\nimport App from './App';\nimport TimezonePicker from 'react-timezone';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport '../css/DisplayStamp.scss';\n\nclass StampDisplay extends Component {\n  state = {\n    zone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    date: window.location.pathname.substr(1)\n  };\n  render() {\n    return (\n      <App\n        main={\n          <Fragment>\n            <p className=\"subhead\">That's...</p>\n            <div className=\"time-hour\">\n              <Moment tz={this.state.zone} format=\"h:mm a\" unix>\n                {this.state.date}\n              </Moment>\n            </div>\n            <div className=\"time-day\">\n              <Moment tz={this.state.zone} format=\"dddd, MMMM Do YYYY\" unix>\n                {this.state.date}\n              </Moment>\n            </div>\n            <div className=\"arrow-up display\" />\n            <TimezonePicker\n              className=\"timezone-picker\"\n              value={this.state.zone}\n              onChange={timezone => {\n                this.setState({ zone: timezone });\n              }}\n              inputProps={{\n                placeholder: 'Select Timezone...',\n                name: 'timezone'\n              }}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default StampDisplay;\n","import React, { Component, Fragment } from 'react';\nimport App from './App';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <App\n        main={\n          <Fragment>\n            <h2>Oops!</h2>\n            <p>\n              Looks like that page doesn't exist. Maybe you were trying to\n              create a zoneStamp?\n            </p>\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport CreateStamp from './CreateStamp';\nimport StampDisplay from './StampDisplay';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={CreateStamp} />\n      <Route path=\"/(\\d{10})\" component={StampDisplay} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/github.c1356d39.svg\";"],"sourceRoot":""}